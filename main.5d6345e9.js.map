{"version":3,"sources":["src/Helper/CST.js","src/Scene/LoadScene.js","src/Scene/MenuScene.js","src/main.js"],"names":["CST","SCENE","LOAD_SCENE","MENU_SCENE","Scene","LoadScene","Phaser","key","scene","start","MenuScene","pack","files","type","url","sceneKey","load","spine","add","girl","bjj","setScale","skeletonData","skin","findSkin","skinName","item","tempSkin","addSkin","setSkin","setSlotsToSetupPose","clear","skinNameNew","game","Game","WEBGL","width","height","render","pixelArt","scale","mode","Scale","FIT","autoCenter","CENTER_BOTH"],"mappings":"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","file":"main.5d6345e9.js","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENE: {\r\n        LOAD_SCENE : \"Load\",\r\n        MENU_SCENE : \"Menu\"\r\n    }\r\n}","/** @type {import (\"../../typing/phaser\")} */\r\n\r\nimport { CST } from \"../Helper/CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENE.LOAD_SCENE\r\n        });\r\n    }\r\n\r\n    preload(){\r\n\r\n    }\r\n\r\n    create(){\r\n        this.scene.start(CST.SCENE.MENU_SCENE);\r\n    }\r\n}","/** @type {import (\"../../typing/phaser\")} */\r\n/** @type {import (\"../../typing/SpinePlugin\")} */\r\n/** @type {import (\"../../typing/spine\")} */\r\n\r\nimport { CST } from \"../Helper/CST\";\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENE.MENU_SCENE,\r\n            pack: {\r\n                files: [\r\n                    { type: 'scenePlugin', key: 'SpinePlugin', url: 'SpinePlugin.min.js', sceneKey: 'spine' }\r\n                ]\r\n            }\r\n        });\r\n    }\r\n\r\n    preload ()\r\n    {\r\n        this.load.spine(\"girl\", \"./assets/spine/Girl/Girl_1.json\", [ \"./assets/spine/Girl/Girl_1.atlas\" ]);\r\n        this.load.spine(\"bjj\", \"./assets/spine/BJJ_HNS/BJJ_HNS.json\", [ \"./assets/spine/BJJ_HNS/BJJ_HNS.atlas\" ]);\r\n    }\r\n\r\n    create ()\r\n    {\r\n        let girl = this.add.spine(200, 600, \"girl\", \"Idle\", true);\r\n\r\n       /* {\r\n            let bjj = this.add.spine(200, 400,\"bjj\", \"Idle\", true);\r\n            bjj.setScale(0.3);\r\n            let skeletonData = bjj.skeletonData;\r\n            let skin = bjj.skeletonData.findSkin(\"default\");// new spine.Skin(\"CustomSkin\");\r\n            //let skin =  new spine.Skin(\"default\");\r\n            \r\n            let skinName = [\"Bjj_Face\", \"Costumes/Bjj_Dress\"];\r\n            for(const item in skinName){\r\n                let tempSkin = skeletonData.findSkin(skinName[item]);\r\n                skin.addSkin(tempSkin);\r\n            }\r\n            bjj.setSkin(skin);\r\n            bjj.setSlotsToSetupPose();\r\n        }*/\r\n\r\n        \r\n            let bjj = this.add.spine(200, 600,\"bjj\", \"Idle\", true);\r\n            bjj.setScale(0.3);\r\n            let skeletonData = bjj.skeletonData;\r\n            let skin = bjj.skeletonData.findSkin(\"default\");// new spine.Skin(\"CustomSkin\");\r\n            //let skin =  new spine.Skin(\"default\");\r\n            let skinName = [\"Bjj_Face\"];\r\n            for(const item in skinName){\r\n                let tempSkin = skeletonData.findSkin(skinName[item]);\r\n                skin.addSkin(tempSkin);\r\n            }\r\n            bjj.setSkin(skin);\r\n            bjj.setSlotsToSetupPose();\r\n\r\n            skin.clear();\r\n            let skinNameNew = [\"Costumes/Farmer_Dress\"];\r\n            for(const item in skinNameNew){\r\n                let tempSkin = skeletonData.findSkin(skinNameNew[item]);\r\n                skin.addSkin(tempSkin);\r\n            }\r\n            \r\n            bjj.setSkin(skin);\r\n            bjj.setSlotsToSetupPose();\r\n    }\r\n}","/** @type {import(\"../typing/phaser\")} */\r\n\r\nimport { LoadScene } from \"./Scene/LoadScene\";\r\nimport { MenuScene } from \"./Scene/MenuScene\";\r\n\r\nlet game = new Phaser.Game({\r\n    type: Phaser.WEBGL,\r\n    width: 1280,\r\n    height: 720,\r\n    render:{\r\n        pixelArt: true\r\n    },\r\n    scene : [\r\n        LoadScene,\r\n        MenuScene\r\n    ],\r\n    scale : {\r\n        mode : Phaser.Scale.FIT,\r\n        autoCenter : Phaser.Scale.CENTER_BOTH\r\n    }\r\n});"]}